definitions:
  models.CreateSubscription:
    properties:
      end_date:
        type: string
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  models.ErrorResponse:
    properties:
      error:
        example: error
        type: string
    type: object
  models.Subscription:
    properties:
      end_date:
        type: string
      id:
        type: integer
      price:
        type: integer
      service_name:
        type: string
      start_date:
        type: string
      user_id:
        type: string
    type: object
  models.TotalCostResponse:
    properties:
      total:
        example: 1000
        type: integer
    type: object
info:
  contact: {}
paths:
  /subscriptions:
    get:
      description: Retrieve all of the subscriptions
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Subscription'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get all subscriptions
      tags:
      - subscriptions
    post:
      consumes:
      - application/json
      description: Create a new subscription with the provided details
      parameters:
      - description: Subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.CreateSubscription'
      produces:
      - application/json
      responses:
        "201":
          description: CreatedSubscription
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Create a new subscription
      tags:
      - subscriptions
  /subscriptions/{id}:
    delete:
      description: Delete a subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Delete a subscription by ID
      tags:
      - subscriptions
    get:
      description: Retrieve a subscription by its ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get a subscription by ID
      tags:
      - subscriptions
    put:
      consumes:
      - application/json
      description: Updates an existing subscription by ID
      parameters:
      - description: Subscription ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated subscription data
        in: body
        name: subscription
        required: true
        schema:
          $ref: '#/definitions/models.CreateSubscription'
      produces:
      - application/json
      responses:
        "200":
          description: Updated subscription
          schema:
            $ref: '#/definitions/models.Subscription'
        "400":
          description: Invalid subscription ID or request body
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "404":
          description: Subscription not found
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Update a subscription
      tags:
      - subscriptions
  /subscriptions/total:
    get:
      description: Calculates the total cost of subscriptions for a user over a specified
        period, optionally filtered by service name and date range
      parameters:
      - description: User ID (UUID)
        in: query
        name: user_id
        required: true
        type: string
      - description: Service name filter
        in: query
        name: service_name
        type: string
      - description: Start date (MM-YYYY)
        in: query
        name: start_date
        type: string
      - description: End date (MM-YYYY)
        in: query
        name: end_date
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Total cost
          schema:
            $ref: '#/definitions/models.TotalCostResponse'
        "400":
          description: Invalid user ID or date format
          schema:
            $ref: '#/definitions/models.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/models.ErrorResponse'
      summary: Get total cost of subscriptions
      tags:
      - subscriptions
swagger: "2.0"
